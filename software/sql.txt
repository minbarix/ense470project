CREATE TABLE ense470software(
	softwarename VARCHAR(255) NOT NULL PRIMARY KEY,
	abb VARCHAR(6)
);

CREATE TABLE ense470memberships(
	softwarename VARCHAR(255) NOT NULL,
	approvername VARCHAR(255) NOT NULL,
	FOREIGN KEY (softwarename) REFERENCES ense470software (softwarename) ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (approvername) REFERENCES ense470approver (approvername) ON DELETE RESTRICT ON UPDATE CASCADE,
	PRIMARY KEY (softwarename, approvername)
);

CREATE TABLE ense470approver(
	approvername VARCHAR(255) NOT NULL PRIMARY KEY,
	email VARCHAR(255),
	phone BIGINT(16)	
);


CREATE TABLE ense470request(
	requestnum INT(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,
	owner VARCHAR(255) REFERENCES ense470users(username),
	software VARCHAR(255) REFERENCES ense470software(softwarename),
	comments VARCHAR (1000),
	isapproved TINYINT(1) DEFAULT '0',
	isverified TINYINT(1) DEFAULT '0',
	iscompleted TINYINT(1) DEFAULT '0'
);

CREATE TABLE ense470users(
	username VARCHAR(255) NOT NULL PRIMARY KEY,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	tier INT(2)
);

INSERT INTO ense470users (username, email, password, tier) VALUES ('usertest', 'user@hell.com','12345678','1');
INSERT INTO ense470users (username, email, password, tier) VALUES ('approvertest', 'approver@hell.com','abc123','2');
INSERT INTO ense470users (username, email, password, tier) VALUES ('analysttest', 'analyst@hell.com','securepassword','3');

